#!/bin/bash

ME="$0"

export LC_ALL="C"

err() {
	echo "$ME: $*" >&2
	exit 1
}

## only want to run as unprivileged user
[ `whoami` == 'root' ] && err "dont wanna run as root"

ZIMBRA_ROOT="$HOME"
PATH="$ZIMBRA_ROOT/bin:$PATH:/sbin:/usr/sbin"

mkdir -p \
	$ZIMBRA_ROOT/var/lib/dpkg		\
	$ZIMBRA_ROOT/var/lib/dpkg/updates	\
	$ZIMBRA_ROOT/var/lib/dpkg/triggers	\
	$ZIMBRA_ROOT/var/lib/dpkg/info		\
	$ZIMBRA_ROOT/var/log			\
	$ZIMBRA_ROOT/.tmp			|| err "permission problem. cannot access package database"

touch	\
	$ZIMBRA_ROOT/var/lib/dpkg/status	\
	$ZIMBRA_ROOT/var/lib/dpkg/available	|| err "permission problem. cannot access package database"

zmpkg_foreign_arch() {
	local version=`dpkg --version | grep "version"`
	case "$version" in
	    *1.14*)
		    return 1
	    ;;
	    *1.15.5*)
		    return 1
	    ;;
	    *1.16*)
		    return 0
	    ;;
	    *)
		    return 0
	    ;;
	esac
}

zmpkg_pkgname_suffix() {
	local version=`dpkg --version | grep "version"`
	case "$version" in
	    *1.14*)
		    return 1
	    ;;
	    *1.15.5*)
		    return 1
	    ;;
	    *1.16.1.2)
		    return 1
	    ;;
	    *1.16*)
		    return 0
	    ;;
	    *)
		    return 0
	    ;;
	esac
}

## special tweaks for being called from apt-get or aptitude
## forcing the architecture suffix on passed package names
if zmpkg_pkgname_suffix ; then
	PKGNAME_SUFFIX=":All"
fi

COMMAND=""
while [ "$1" ]; do
	case "$1" in
		"--remove")
			shift
			COMMAND="$COMMAND --remove $1$PKGNAME_SUFFIX"
			WANT_AUTODEPLOY=1
			shift
		;;
		"--configure")
			shift
			COMMAND="$COMMAND --configure $1$PKGNAME_SUFFIX"
			WANT_AUTODEPLOY=1
			shift
		;;
		"--version")
			shift
			COMMAND="$COMMAND --version"
			NO_AUTODEPLOY=1
		;;
		"--no-autodeploy")
			NO_AUTODEPLOY=1
			shift
		;;
		*)
			COMMAND="$COMMAND $1"
			shift
		;;
	esac
done

if zmpkg_foreign_arch; then
	FOREIGN_ARCH="--foreign-architecture All"
fi

fakeroot dpkg --force-architecture --force-not-root $OPT_FORCE_ARCH --root=$ZIMBRA_ROOT --log=$ZIMBRA_ROOT/var/log/dpkg.log $FOREIGN_ARCH $COMMAND

if [ "$WANT_AUTODEPLOY" ] && [ ! "$NO_AUTODEPLOY" ]; then
	zmpkg-autodeploy
fi
